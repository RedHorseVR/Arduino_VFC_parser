set(/* includes */);// 
event(#include <windows.h>);// 
event(#include "InsectaStartup.h");// 
event(#include "about.h");// 
event(#include "globals.h");// 
event(#include "insecta.h");// 
event(#include "res_extra.h");// 
event(#include "utils.h");// 
event(#include "winproc_externs.h");// 
set(/* globals */);// 
process(int TimeExpired(char*, char*, char*););// 
set(int ClearRegFlag = FALSE;);// 
set(int InsectaRunMode = FALSE;);// 
set(class InsectaStartup Startup;);// 
set(char GotoMsg[1024];);// 
set(int GotoZoom = 0;);// 
set(extern char vfc99_directory[];);// 
set(/* externals */);// 
process(void ParseAndExecuteTool(char* cmd););// 
set(extern char InsectaFilename[];);// 
set(extern HWND hICodeDlg;);// 
set(extern HWND hObjPropDlg;);// 
set(extern HWND MainWindow;);// 
set(extern int check_for_export(char* VFCfile, char* EXPfile););// 
set(/* defines */);// 
event(#define TRACKING 0);// 
event(#define MESSG                                        \);// 
set({                                                \);// 
set(MessageBox(MainWindow, "Debug", "Break", 0); \);// 
set(});// 
event(#define TRACK);// 
event(#define TRACK);// 
set(/* prototypes */);// 
process(int SwapMacro(char* line, char* macro, char* swap););// 
input(int GetKeyFileCommand(char* key, char* cmd_buffer) {);// 
event(#define MAXLINE_SIZE 2048);// 
event(#define KEYFILE_TARGET cmd_buffer);// 
set(char keyfile[1024];);// 
set(wsprintf(keyfile, "%s\\%s", Project.Env->LibraryDir, key););// 
set(FILE* fp = fopen(keyfile, "r"););// 
set(char string[MAXLINE_SIZE];);// 
branch(if (fp) {);// beginif
path();//
loop(while (fgets(string, MAXLINE_SIZE, fp)) {);// beginwhile
branch(if (strstr(string, KEYFILE_TARGET)) {);// beginif
path();//
set(fgets(string, MAXLINE_SIZE, fp););// 
set(strcpy(cmd_buffer, string););// 
set(fclose(fp););// 
branch(if (*string) {);// beginif
path();//
end(return 1;);// 
path(} else {);// 
end(return 0;);// 
bend(});// endif
path(} else {);// 
bend(});// endif
lend(});// endwhile
set(fclose(fp););// 
path(} else {);// 
set(MessageBox(0, keyfile, "The key file did not open", MB_OK););// 
bend(});// endif
end(return 0;);// 
end(});// 
input(int GetKeyWordFilter(char* file, char* key_buffer) {);// 
set(FILE* fp = fopen(file, "r"););// 
set(char string[MAXLINE_SIZE];);// 
set(*key_buffer = '\0';);// 
branch(if (fp) {);// beginif
path();//
loop(while (fgets(string, MAXLINE_SIZE, fp)) {);// beginwhile
branch(if (strstr(string, ";INSECTA EMBEDDED SESSION INFORMATIO")) {);// beginif
path();//
set(fgets(string, MAXLINE_SIZE, fp););// 
set(fgets(string, MAXLINE_SIZE, fp););// 
set(char* tok = strtok(string, " ;\t"););// 
set(strcpy(ExportFileName, tok););// 
set(wsprintf(Project.ExportName, ExportFileName););// 
loop(while (fgets(string, MAXLINE_SIZE, fp)) {);// beginwhile
branch(if (strstr(string, ";INSECTA EMBEDDED ALTSESSION INFORMATIO")) {);// beginif
path();//
set(fgets(string, MAXLINE_SIZE, fp););// 
set(fclose(fp););// 
set(char* s = strstr(string, ".key"););// 
branch(if (s) {);// beginif
path();//
set(*s = NULL;);// 
loop(while (s > string && *s != ' ' && *s != '\t') {);// beginwhile
set(s--;);// 
lend(});// endwhile
set(wsprintf(key_buffer, "%s.key", ++s););// 
end(return 1;);// 
path(} else {);// 
end(return 0;);// 
bend(});// endif
bend(});// endif
end(});//  end while
set(fclose(fp););// 
end(return 0;);// 
path(} else {);// 
bend(});// endif
lend(});// endwhile
set(fclose(fp););// 
path(} else {);// 
set(MessageBox(0, file, "The VFC file did not open", MB_OK););// 
bend(});// endif
end(return 0;);// 
set(});// 
input(void LoadExecuteKeyTool(char* file, char* tool) {);// 
set(char key_buffer[1024];);// 
set(GetKeyWordFilter(file, key_buffer););// 
set(GetKeyFileCommand(key_buffer, tool););// 
branch(if (*tool) {);// beginif
path();//
set(char* s = strrchr(tool, '|'););// 
branch(if (s) {);// beginif
path();//
set(*s = NULL;);// 
bend(});// endif
set(int flag = 0;);// 
set(flag += SwapMacro(tool, "<ExportFileName", ExportFileName););// 
set(flag += SwapMacro(tool, "<InsectaFileName", InsectaFilename););// 
set(flag += SwapMacro(tool, "<CurrentObject", InsectaFilename););// 
set(flag += SwapMacro(tool, "<CurrentDir", Project.Env->CurrentDir););// 
set(char* tok = strstr(tool, ">."););// 
branch(if (tok && flag) {);// beginif
path();//
set(char str[1024];);// 
set(s = tok;);// 
loop(while (s > tool && *s != '<' && *s != '.') {);// beginwhile
set(s--;);// 
lend(});// endwhile
branch(if (*s == '.') {);// beginif
path();//
set(*(tok + 1) = NULL;);// 
set(strncpy(str, s, 99););// 
set(*(tok + 1) = '.';);// 
branch(if (*(tok + 2) == ' ' || *(tok + 2) == '\t') {);// beginif
path();//
set(strcat(str, "."););// 
bend(});// endif
set(SwapMacro(tool, str, ""););// 
path(} else {);// 
set(SwapMacro(tool, ">.", ""););// 
bend(});// endif
path(} else if (flag) {);// 
set(SwapMacro(tool, ">", ""););// 
bend(});// endif
set(WinExec(tool, SW_NORMAL););// 
path(} else {);// 
set(MessageBox(0, key_buffer, "No tool", MB_OK););// 
bend(});// endif
end(});// 
set(inline int iswhite(char c) { return (c == ' ' || c == '\t'); });// 
input(void SetLongFileName(char* name) {);// 
set(WIN32_FIND_DATA fd;);// 
set(*fd.cFileName = NULL;);// 
set(FindFirstFile(name, &fd););// 
branch(if (*(fd.cFileName)) {);// beginif
path();//
set(strcpy(name, fd.cFileName););// 
bend(});// endif
end(});// 
set(int GotoLine;);// 
set(char ProgramName[1024] = "VFC2000.exe";);// 
input(int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {);// 
set(FILE* fptr;);// 
set(char *cmdline, *flags = NULL;);// 
set(hInst = hInstance;);// 
set(char* file_spec = vfc99_directory;);// 
set(*vfc99_directory = NULL;);// 
set(SearchPath(NULL, (LPCSTR)ProgramName, NULL, 355, vfc99_directory, &file_spec););// 
branch(if (file_spec && *file_spec) {);// beginif
path();//
set(*--file_spec = NULL;);// 
bend(});// endif
branch(if (lpCmdLine && *lpCmdLine) {);// beginif
path();//
set(char* reg = NULL;);// 
set(char* ptr = lpCmdLine;);// 
set(char cmd[MAX_PATH];);// 
set(strcpy(cmd, lpCmdLine););// 
loop(while (SwapMacro(cmd, "\"", "")) {);// beginwhile
lend(});// endwhile
set(char* filen = strrchr(cmd, '\\'););// 
branch(if (filen) {);// beginif
path();//
set(*filen = '\0';);// 
set(strcpy(Project.Env->CurrentDir, cmd););// 
set(SetCurrentDirectory(cmd););// 
set(filen++;);// 
path(} else {);// 
set(filen = cmd;);// 
bend(});// endif
set(strcpy(InsectaFilename, filen););// 
set(char* load_options = strrchr(InsectaFilename, '-'););// 
branch(if (load_options) {);// beginif
path();//
set(*load_options = NULL;);// 
path(} else {);// 
bend(});// endif
set(char* d1 = strrchr(filen, '.'););// 
branch(if (d1) {);// beginif
path();//
set(ptr = ++d1;);// 
path(} else {);// 
set(ptr = filen;);// 
bend(});// endif
set(flags = strrchr(ptr, '-'););// 
branch(if (flags && flags > ptr) {);// beginif
path();//
set(reg = strtok(++flags, " "););// 
path(} else {);// 
set(flags = 0;);// 
bend(});// endif
set(strtok(ptr, "-"););// 
set(cmdline = lpCmdLine;);// 
branch(if (flags && cmdline && *cmdline != '-' && strlen(cmdline)) {);// beginif
path();//
set(char path[1024], *dir = strrchr(cmdline, '\\'););// 
branch(if (dir) {);// beginif
path();//
set(*dir = NULL;);// 
set(wsprintf(path, "%s\\", cmdline););// 
set(SetCurrentDirectory(path););// 
set(GetCurrentDirectory(255, Project.Env->CurrentDir););// 
set(cmdline = ++dir;);// 
bend(});// endif
set(char* tok = cmdline + strlen(cmdline) - 1;);// 
loop(while (tok > cmdline && iswhite(*tok)) {);// beginwhile
set(*tok = NULL;);// 
set(tok--;);// 
lend(});// endwhile
set();//   nsectaFileName is the main target file name
set(char flowfile_name[1512];);// 
set(char export_name[1512];);// 
set(wsprintf(export_name, "%s", InsectaFilename););// 
set(char* insfile = strstr(export_name, EXTENSION););// 
branch(if (insfile) {);// beginif
path();//
set(*insfile = '\0';);// 
bend(});// endif
set(wsprintf(flowfile_name, "%s\\%s", Project.Env->CurrentDir, InsectaFilename););// 
set(fptr = fopen(flowfile_name, "r"););// 
branch(if (fptr && (strstr(InsectaFilename, EXTENSION) || strstr(InsectaFilename, LEGACY_EXTENSION))) {);// beginif
path();//
set(fclose(fptr););// 
path(} else {);// 
set(wsprintf(flowfile_name, "%s\\%s%s", Project.Env->CurrentDir, InsectaFilename, EXTENSION););// 
set(fptr = fopen(flowfile_name, "r"););// 
branch(if (fptr) {);// beginif
path();//
path(} else {);// 
set(wsprintf(flowfile_name, "%s\\%s%s", Project.Env->CurrentDir, InsectaFilename, LEGACY_EXTENSION););// 
set(fptr = fopen(flowfile_name, "r"););// 
bend(});// endif
branch(if (fptr && check_for_export(flowfile_name, export_name)) {);// beginif
path();//
set(fclose(fptr););// 
set(wsprintf(InsectaFilename, "%s", flowfile_name););// 
path(} else {);// 
branch(if (fptr) {);// beginif
path();//
set(fclose(fptr););// 
path(} else {);// 
bend(});// endif
set(char* insfile = strrchr(InsectaFilename, '.'););// 
branch(if (insfile) {);// beginif
path();//
set(*insfile = '\0';);// 
set(wsprintf(flowfile_name, "%s\\%s%s", Project.Env->CurrentDir, InsectaFilename, EXTENSION););// 
set(fptr = fopen(flowfile_name, "r"););// 
branch(if (fptr) {);// beginif
path();//
path(} else {);// 
set(wsprintf(flowfile_name, "%s\\%s%s", Project.Env->CurrentDir, InsectaFilename, LEGACY_EXTENSION););// 
set(fptr = fopen(flowfile_name, "r"););// 
bend(});// endif
branch(if (fptr && check_for_export(flowfile_name, export_name)) {);// beginif
path();//
set(fclose(fptr););// 
set(wsprintf(InsectaFilename, "%s", flowfile_name););// 
path(} else {);// 
branch(if (fptr) {);// beginif
path();//
set(fclose(fptr););// 
path(} else {);// 
bend(});// endif
set(MessageBox(NULL, "Visual Flow Code file for specified code not found.", export_name, MB_OK););// 
end(return 0;);// 
bend(});// endif
path(} else {);// 
bend(});// endif
bend(});// endif
set();//  END OF NEW AUTO OPEN FLOWFILE FIX
bend(});// endif
set(SetLongFileName(InsectaFilename););// 
set(HWND H;);// 
branch(if ((H = FindWindow(APPNAME, InsectaFilename)) && !strstr(InsectaFilename, "Run")) {);// beginif
path();//
set(char* go = NULL;);// 
branch(if (cmdline && (go = strstr(cmdline, "Reload"))) {);// beginif
path();//
set(SendMessage(H, WM_COMMAND, ID_FILE_RELOAD, 0););// 
bend(});// endif
branch(if (reg && strstr(reg, "Goto")) {);// beginif
path();//
set(InsectaRunMode = 0;);// 
set(flags = 0;);// 
branch(if (cmdline && (go = strstr(reg, "Goto"))) {);// beginif
path();//
set(go += (strlen("Goto") + 1););// 
set(sscanf(go, "%d %d", &GotoLine, &GotoZoom););// 
set(*GotoMsg = NULL;);// 
set(strncat(GotoMsg, &go[4], 298););// 
set(nCmdShow = SW_SHOW;);// 
bend(});// endif
bend(});// endif
branch(if (go) {);// beginif
path();//
branch(if (GotoLine) {);// beginif
path();//
set(SendMessage(H, WM_COMMAND, GOTO_LINE, GotoLine););// 
path(} else {);// 
bend(});// endif
branch(if (GotoZoom < 0) {);// beginif
path();//
set(SendMessage(H, WM_COMMAND, ID_FONT_SMALLER, 0););// 
path(} else if (GotoZoom > 0) {);// 
set(SendMessage(H, WM_COMMAND, ID_FONT_LARGER, 0););// 
path(} else {);// 
bend(});// endif
path(} else {);// 
set(SetWindowPos(H, HWND_TOPMOST, 0, 0, 100, 100, SWP_NOMOVE | SWP_NOSIZE););// 
set(SetActiveWindow(H););// 
set(ShowWindow(H, SW_RESTORE););// 
set(Sleep(50););// 
set(SetWindowPos(H, HWND_NOTOPMOST, 0, 0, 100, 100, SWP_NOMOVE | SWP_NOSIZE););// 
bend(});// endif
end(return 0;);// 
path(} else {);// 
bend(});// endif
path(} else {);// 
set(HWND H;);// 
branch(if ((H = FindWindow(APPNAME, InsectaFilename))) {);// beginif
path();//
set(SetWindowPos(H, HWND_TOPMOST, 0, 0, 100, 100, SWP_NOMOVE | SWP_NOSIZE););// 
set(SetActiveWindow(H););// 
set(ShowWindow(H, SW_RESTORE););// 
set(Sleep(50););// 
set(SetWindowPos(H, HWND_NOTOPMOST, 0, 0, 100, 100, SWP_NOMOVE | SWP_NOSIZE););// 
end(return 0;);// 
path(} else {);// 
bend(});// endif
bend(});// endif
set(InsectaRunMode = Startup.GetStartupCommand(InsectaFilename););// 
branch(if (reg) {);// beginif
path();//
set(char* go = NULL;);// 
branch(if (strstr(reg, "WorkSpaceFolder")) {);// beginif
path();//
set(char temp_buff[556];);// 
set(char buff[256];);// 
set(GetCurrentDirectory(255, buff););// 
set(wsprintf(temp_buff, "Explorer.exe  %s", Project.Env->CurrentDir););// 
set(WinExec(temp_buff, SW_NORMAL););// 
end(return 0;);// 
bend(});// endif
set(char cmd_buff[1600];);// 
branch(if (strstr(reg, "RunButton")) {);// beginif
path();//
set(InsectaRunMode = RUN_BUTTON_COMMAND;);// 
set(wsprintf(cmd_buff, "RUN_BUTTON"););// 
set(LoadExecuteKeyTool(InsectaFilename, cmd_buff););// 
end(return 0;);// 
path(} else if (strstr(reg, "CompileButton")) {);// 
set(InsectaRunMode = COMPILE_BUTTON_COMMAND;);// 
set(wsprintf(cmd_buff, "COMPILE_BUTTON"););// 
set(LoadExecuteKeyTool(InsectaFilename, cmd_buff););// 
end(return 0;);// 
path(} else if (strstr(reg, "BuildButton")) {);// 
set(InsectaRunMode = BUILD_BUTTON_COMMAND;);// 
set(wsprintf(cmd_buff, "BUILD_BUTTON"););// 
set(LoadExecuteKeyTool(InsectaFilename, cmd_buff););// 
end(return 0;);// 
path(} else if (strstr(reg, "HelpButton")) {);// 
set(InsectaRunMode = HELP_BUTTON_COMMAND;);// 
set(wsprintf(cmd_buff, "HELP_BUTTON"););// 
set(LoadExecuteKeyTool(InsectaFilename, cmd_buff););// 
end(return 0;);// 
bend(});// endif
branch(if (strstr(reg, "Goto")) {);// beginif
path();//
set(InsectaRunMode = 0;);// 
set(flags = 0;);// 
branch(if (cmdline && (go = strstr(reg, "Goto"))) {);// beginif
path();//
set(go += (strlen("Goto") + 1););// 
set(sscanf(go, "%d %d", &GotoLine, &GotoZoom););// 
set(strcpy(GotoMsg, go););// 
set(strncat(GotoMsg, go, 298););// 
set(nCmdShow = SW_SHOW;);// 
branch(if (strcmp(reg, "OpenGoto") == 0) {);// beginif
path();//
bend(});// endif
bend(});// endif
bend(});// endif
branch(if (strstr(reg, "NewRegistration")) {);// beginif
path();//
set(nCmdShow = SW_MAXIMIZE;);// 
set(strcpy(InsectaFilename, UNTITLED););// 
set(ClearRegFlag = TRUE;);// 
bend(});// endif
branch(if (strstr(reg, "Demo")) {);// beginif
path();//
set(nCmdShow = SW_SHOW;);// 
set(MAX_DEMO_OBJECTS = NUM_OBJECTS_LIMIT;);// 
bend(});// endif
branch(if (strstr(reg, "Run")) {);// beginif
path();//
set(InsectaRunMode = RUN_COMMAND;);// 
set(flags = 0;);// 
bend(});// endif
branch(if (strstr(reg, "Applet")) {);// beginif
path();//
set(InsectaRunMode = APPLET_COMMAND;);// 
path(} else {);// 
set(InsectaRunMode = 0;);// 
set(flags = 0;);// 
bend(});// endif
branch(if (strstr(reg, "Document")) {);// beginif
path();//
set(InsectaRunMode = DOCUMENT_COMMAND;);// 
set(flags = 0;);// 
bend(});// endif
branch(if (strstr(reg, "Print")) {);// beginif
path();//
set(InsectaRunMode = PRINT_COMMAND;);// 
set(flags = 0;);// 
bend(});// endif
branch(if (strstr(reg, "Open")) {);// beginif
path();//
set(InsectaRunMode = 0;);// 
set(flags = 0;);// 
bend(});// endif
branch(if (strstr(reg, "Clone")) {);// beginif
path();//
set(InsectaRunMode = CLONE_COMMAND;);// 
set(SetLongFileName(UNTITLED););// 
set(flags = 0;);// 
set();//  DEBUG
bend(});// endif
bend(});// endif
path(} else {);// 
set(nCmdShow = SW_SHOW;);// 
bend(});// endif
branch(if (!hPrevInstance) {);// beginif
path();//
branch(if (!InitApplication(hInstance)) {);// beginif
path();//
end(return FALSE;);// 
bend(});// endif
bend(});// endif
set(RECT r = {CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT};);// 
branch(if (!InitInstance(hInstance, nCmdShow, &r)) {);// beginif
path();//
end(return FALSE;);// 
bend(});// endif
branch(if (nCmdShow == SW_MAXIMIZE || flags) {);// beginif
path();//
set(CreateDialog(0, "STARTUPBANNER", MainWindow, (DLGPROC)_StartBanner););// 
bend(});// endif
branch(if (GotoLine) {);// beginif
path();//
set(PostMessage(MainWindow, WM_COMMAND, GOTO_LINE, GotoLine););// 
path(} else {);// 
bend(});// endif
set(MSG msg;);// 
loop(while (GetMessage(&msg, NULL, 0, 0)) {);// beginwhile
set(TranslateMessage(&msg););// 
set(DispatchMessage(&msg););// 
lend(});// endwhile
end(return msg.wParam;);// 
end(});// 
set();//   Export  Date: 12:09:45 PM - 05:Dec:2020;

;INSECTA EMBEDDED SESSION INFORMATION
; 255 16777215 65280 16777088 16711680 32896 8421504 0 255 255 16777215 4227327 2960640
; VFCMAIN.cpp // 
; notepad.exe
;INSECTA EMBEDDED ALTSESSION INFORMATION
; 880 168 766 1516 0 110   392   31 C++.key  0
